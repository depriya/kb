name: TestConcertoUpload

on:
  workflow_dispatch:
    inputs:
        ResourceGroup:
            description: "Resource group"
            required: true
        storageAccount:
            description: "Storage account"
            required: true
        projectName:
            description: "Project name that maps to ContainerName"
            required: true
        virtualMachineScaleSetName:
            description: "VMSS resource name if using VMSS"
            required: false
        virtualMachineName:
            description: "VM Name"
            required: false
        virtualMachineRGName:
            description: "VM RG Name"
            required: false
        VMSSRGName:
            description: "VMSS RG Name"
            required: false
      
permissions:
      id-token: write
      contents: read

jobs:
    build-and-deploy:
      runs-on: xmew1-dop-s-stamp-d-vm-003
      environment: sub-AVL_DevopsPilot
      steps:
        - name: 'Az CLI login'
          uses: azure/login@v1
          with:
            client-id: ${{ secrets.AZURE_CLIENT_ID }}
            tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
            #enable-AzPSSession: true

    
        - name: Checkout code
          uses: actions/checkout@v3
        
        - name: Check AZ login
          shell: pwsh
          run: |
            echo "${{ github.workspace }}"
            $subscriptionID = "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
            $ResourceGroup = "${{ inputs.ResourceGroup }}"
            $storageAccount = "${{ inputs.storageAccount }}"
            $containerName = "${{ inputs.projectName }}".ToLower()
            $virtualMachineName = "${{ inputs.virtualMachineName }}"
            $virtualMachineRGName = "${{ inputs.virtualMachineRGName }}"
            $vmssName="${{ inputs.virtualMachineScaleSetName }}"
            $VMSSRGName="${{ inputs.VMSSRGName }}"
            $command_id="RunPowerShellScript"

            $localFolderPath="C:\Users\avluser.vm-000001\Source"

            $storage_key=$(az storage account keys list --subscription "$subscriptionID" -g "$ResourceGroup" -n "$storageAccount" --query "[0].value" -o tsv)

            cd ${{ github.workspace }}/.github
            Write-Host "Get instance IDs of all VMs in the VMSS"
            $instance_ids=($(az vmss list-instances --resource-group "$VMSSRGName" --name "$vmssName" --query "[].instanceId" -o tsv))
            Write-Host $instance_ids
            foreach ($instanceId in $instance_ids) {
              az vmss run-command invoke --resource-group "$VMSSRGName" --name "$vmssName" --instance-id "$instanceId" --command-id $command_id --scripts "@upload.ps1" --parameters "StorageAccountName=$storageAccount" "ContainerName=$containerName" "AccountKey=$storage_key" "localFolderPath=$localFolderPath"
            }
            Write-Host "Run command executed on all VMSS instances"
