name: Deploy.environment.vmss

on:
  workflow_dispatch:
    # #inputs:
    #   resource_name:
    #     description: 'The name of the Azure resource'
    #     required: true
    #   location:
    #     description: 'The Azure region where resources will be deployed'
    #     required: true
    #   oem:
    #     description: 'customer OEM'
    #     required: true
    #   admin_username:
    #     description: 'User name for vmss'
    #     required: true
    #   admin_password:
    #     description: 'Password for VMSS'
    #     required: true
    # #   vnet:
    #     description: 'vnet name'
    #     required: true
    #   subnet:
    #     description: 'subnet name'
    #     required: true
      
permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    environment: sub-AVL_DevopsPilot

    steps:
      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Initialize Terraform
        run: |
          cd environment/vmss
          terraform init

      - name: Plan Terraform changes
        run: |
          cd environment/vmss
          
          #terraform plan -out=tfplan -var="admin_username=${{ github.event.inputs.admin_username }}" -var="admin_password=${{ github.event.inputs.admin_password }}" -var="resource_name=${{ github.event.inputs.resource_name }}" -var="oem=${{ github.event.inputs.oem }}" -var="location=${{ github.event.inputs.location }}"
          terraform plan -out=tfplan
      - name: Apply Terraform changes
        run: |
          cd environment/vmss
          terraform apply -auto-approve tfplan
