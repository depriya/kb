name: Upload Files to Storage

on:
  workflow_dispatch:
    inputs:
        Deploy_environment:
          type: choice
          description: "Choose the environment (with access rights to customer stamp subscription):"
          options:
            - sub-AVL_DevopsPilot
            - sub-AVL_DevopsPilot_Test
            - sub-DevOpsPilot_Test
            - sub-DCP_SIL
          required: true
   


permissions:
      id-token: write
      contents: read

jobs:
    build-and-deploy:
      #runs-on: xmew1-dop-s-stamp-d-vm-003
      runs-on: ubuntu-latest
      environment: ${{ inputs.Deploy_environment }}
      steps:
        - name: 'Az CLI login'
          uses: azure/login@v1
          with:
            client-id: ${{ secrets.AZURE_CLIENT_ID }}
            tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
            #enable-AzPSSession: true

    
        - name: Checkout code
          uses: actions/checkout@v3
        
        - name: Run Script
          run: |
            cd .github
            storageAccount="${{ vars.STORAGEACCOUNT }}"
            containerName="${{ vars.CONTAINERNAME }}"
            subscriptionID="${{ secrets.AZURE_SUBSCRIPTION_ID }}"
            ResourceGroup="${{ vars.VIRTUALMACHINERGNAME }}"
            storage_key=$(az storage account keys list --subscription "$subscriptionID" -g "$ResourceGroup" -n "$storageAccount" --query "[0].value" -o tsv)
            az storage container create --name $containerName --account-name $storageAccount --account-key '$storage_key'
            #az storage blob upload --account-name "$storageAccount" --container-name $containerName --name ModelConnectInstall.cmd --file ModelConnectInstall.cmd --account-key '$storage_key'
            #az storage blob upload --account-name "$storageAccount" --container-name $containerName --name ModelConnectUpdate.cmd --file ModelConnectUpdate.cmd --account-key '$storage_key'
            #az storage blob upload --account-name "$storageAccount" --container-name $containerName --name concertoInstall.cmd --file concertoInstall.cmd --account-key '$storage_key'
