name: Deploy.environment.ADE

on:
  workflow_dispatch:
    inputs:
      customerOEMsuffix:
        description: "suffix required for customer OEM in lowercase"
        required: true
      environment:
        type: choice
        description: "Choose the environment: d for dev, p for Prod"
        options:
          - d
          - p
        required: true

permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      ENVIRONMENT: sub-AVL_DevopsPilot

    steps:
      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Checkout Repo
        uses: actions/checkout@v2
      
      - name: Set Names
        id: set-names
        run: |
          echo "rgName=xmew1-dop-c-${{ inputs.customerOEMsuffix }}-${{ github.event.inputs.environment }}-rg-001" >> $GITHUB_ENV
          echo "devcenter=xmew1-dop-c-${{ inputs.customerOEMsuffix }}-${{ github.event.inputs.environment }}-dc" >> $GITHUB_ENV
          echo "keyvault=xmew1-dop-c-${{ inputs.customerOEMsuffix }}-${{ github.event.inputs.environment }}-kv" >> $GITHUB_ENV
          echo "law=xmew1-dop-c-${{ inputs.customerOEMsuffix }}-${{ github.event.inputs.environment }}-law-001" >> $GITHUB_ENV
          echo "vnet=xmew1-dop-c-${{ inputs.customerOEMsuffix }}-${{ github.event.inputs.environment }}-vnet-001" >> $GITHUB_ENV
          echo "storageaccount=xmew1dopc${{ inputs.customerOEMsuffix }}${{ github.event.inputs.environment }}st" >> $GITHUB_ENV
          echo "pe=xmew1-dop-c-${{ inputs.customerOEMsuffix }}-${{ github.event.inputs.environment }}-pe-001" >> $GITHUB_ENV
          echo "HUB_Spoke=xmew1-dop-c-${{ inputs.customerOEMsuffix }}-${{ github.event.inputs.environment }}-hub-spoke" >> $GITHUB_ENV
          echo "spoke_hub=xmew1-dop-c-${{ inputs.customerOEMsuffix }}-${{ github.event.inputs.environment }}-spoke-hub" >> $GITHUB_ENV

      - name: Create Resource Group
        run: az group create --name ${{ env.rgName }} --location westeurope

      - name: Debug Resource Group Name
        run: |
          echo "Resource Group Name: ${{ env.rgName }}"
          echo "Dev Center Name: ${{ env.devcenter }}"
          echo "Key Vault Name: ${{ env.keyvault }}"
          echo "Log Analytics Workspace Name: ${{ env.law }}"
          echo "VNet Name: ${{ env.vnet }}"
          echo "Storage Account Name: ${{ env.storageaccount}}"
          echo "HUB_Spoke Name: ${{ env.HUB_Spoke}}"
          echo "Spoke_Hub Name: ${{ env.spoke_hub}}"
          echo "Private Endpoint Name: ${{ env.pe}}"

      - name: Update parameters.json
        run: |
          sed -i "s|\"value\": \"\$(rgName)\"|\"value\": \"${{ env.rgName }}\"|" infra/customer-stamp/parameters.json
          sed -i "s|\"value\": \"\$(devcenter)\"|\"value\": \"${{ env.devcenter }}\"|" 'infra/customer-stamp/parameters.json'
          sed -i "s|\"value\": \"\$(keyvault)\"|\"value\": \"${{ env.keyvault }}\"|" 'infra/customer-stamp/parameters.json'
          sed -i "s|\"value\": \"\$(law)\"|\"value\": \"${{ env.law }}\"|" 'infra/customer-stamp/parameters.json'
          sed -i "s|\"value\": \"\$(vnet)\"|\"value\": \"${{ env.vnet }}\"|" 'infra/customer-stamp/parameters.json'
          sed -i "s|\"value\": \"\$(storageaccount)\"|\"value\": \"${{ env.storageaccount }}\"|" 'infra/customer-stamp/parameters.json'
          sed -i "s|\"value\": \"\$(pe)\"|\"value\": \"${{ env.pe }}\"|" 'infra/customer-stamp/parameters.json'
          sed -i "s|\"value\": \"\$(HUB_Spoke)\"|\"value\": \"${{ env.HUB_Spoke }}\"|" 'infra/customer-stamp/parameters.json'
          sed -i "s|\"value\": \"\$(spoke_hub)\"|\"value\": \"${{ env.spoke_hub }}\"|" 'infra/customer-stamp/parameters.json'

      - name: Deploy customer-stamp
        uses: Azure/arm-deploy@v1
        id: rgDeploy
        with:
          scope: 'subscription'
          region: 'westeurope'
          template: 'infra/customer-stamp/ade.bicep'
          parameters: 'infra/customer-stamp/parameters.json'
