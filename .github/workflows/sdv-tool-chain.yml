name: Build.metamodel

on:
  workflow_dispatch:
      
permissions:
  id-token: write
  contents: read

env:
  TOOlCHAIN_ROOT_PATH: ${{ github.workspace }}/sdv-tool-chain/platform/toolchain
  TOOlCHAIN_CLI_PATH: ${{ github.workspace }}/sdv-tool-chain/platform/toolchain/src/toolchain_cli.py
  METAMODEL_YAML: ${{ github.workspace }}/metamodel/avl_sdv_template.yaml
  METAMODEL_OVERRIDES_YAML: ${{ github.workspace }}/metamodel/avl_sdv_template_overrides.yaml
  METAMODEL_OUTPUT_DIR: ${{ github.workspace }}/output/metamodel  
  METAMODEL_OUTPUT_ZIP_Name: metamodel-output-${{ github.run_id }}
  METAMODEL_OUTPUT_ZIP:  ${{ github.workspace }}/output/metamodel/metamodel-output-${{ github.run_id }}.zip

jobs:
  build:
    runs-on: ubuntu-latest #TODO: Discuss and decide on the runner type
    environment: sub-AVL_DevopsPilot
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
          cache: 'pip'
          
      - name: Install dependencies
        run: |
          pip install yq # yq is used to parse yaml files
          pip install -r $TOOlCHAIN_ROOT_PATH/requirements.txt
          pip install -r $TOOlCHAIN_ROOT_PATH/requirements_test.txt

      - name: Validate Metamodel 
        run: python $TOOlCHAIN_CLI_PATH metamodel validate --from-file  $METAMODEL_YAML --override  $METAMODEL_OVERRIDES_YAML

      - name: Generate Campaign Data for Metamodel 
        run: python $TOOlCHAIN_CLI_PATH metamodel execute --from-file  $METAMODEL_YAML --override  $METAMODEL_OVERRIDES_YAML --output-dir  $METAMODEL_OUTPUT_DIR
      
      - name: Zip the output 
        run: zip -r $METAMODEL_OUTPUT_ZIP $METAMODEL_OUTPUT_DIR
      
      - name: Publish Metamodel Output
        uses: actions/upload-artifact@v4
        with:
          name: $METAMODEL_OUTPUT_ZIP_Name
          path: $METAMODEL_OUTPUT_ZIP

  upload:
    needs: build
    runs-on: ubuntu-latest #TODO: Discuss and decide on the runner type
    environment: sub-AVL_DevopsPilot

    steps:
      - name: Get Metamodel Output from Build
        uses: actions/download-artifact@v4
        with:
          name: $METAMODEL_OUTPUT_ZIP_Name
        
      - name: Unzip the output
        run: |
          mkdir $METAMODEL_OUTPUT_ZIP_Name
          unzip $METAMODEL_OUTPUT_ZIP_Name.zip -d ${{ github.workspace }}/$METAMODEL_OUTPUT_ZIP_Name          
    
      - name: 'Az CLI login'
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Upload Output Files to file share
        shell: pwsh
        run: |
          $customer_OEM_suffix = (yq '.config.customer_OEM_suffix' "$env:METAMODEL_OVERRIDES_YAML").Trim('"')
          $project_name = (yq '.config.project_name' "$env:METAMODEL_OVERRIDES_YAML").Trim('"')
          $resource_name_primary_prefix = (yq '.config.resource_name_primary_prefix' "$env:METAMODEL_OVERRIDES_YAML").Trim('"')
          $resource_name_secondary_prefix = (yq '.config.resource_name_secondary_prefix' "$env:METAMODEL_OVERRIDES_YAML").Trim('"')
          $resource_name_shared_short = (yq '.config.resource_name_shared_short' "$env:METAMODEL_OVERRIDES_YAML").Trim('"')
          $environment_stage_short = (yq '.config.environment_stage_short' "$env:METAMODEL_OVERRIDES_YAML").Trim('"')
          $meta_model_outputs_file_share_name = (yq '.config.meta_model_outputs_file_share_name' "$env:METAMODEL_OVERRIDES_YAML").Trim('"')
          

          $subscription_id = "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
          $ResourceGroup =  "$($resource_name_primary_prefix)-$($resource_name_secondary_prefix)-$($resource_name_shared_short)-stamp-$($environment_stage_short)-rg-001"
          $storageAccount = "$($resource_name_primary_prefix)$($resource_name_secondary_prefix)$($resource_name_shared_short)$($environment_stage_short)st"
          $destinationPath = "$($customer_OEM_suffix)/$($project_name)/$($meta_model_outputs_file_share_name)"

          $storage_key = 
          az storage account keys list `
            --subscription "$subscriptionID" `
            -g "$ResourceGroup" `
            -n "$storageAccount" `
            --query "[0].value" `
            -o tsv `
            --only-show-errors
          
          az storage file upload-batch `
            --account-name $storageAccount `
            --account-key $storage_key `
            --destination "$meta_model_outputs_file_share_name" `
            --destination-path  "$destinationPath"`
            --source "${{ github.workspace }}//${{ env.METAMODEL_OUTPUT_ZIP_Name }}"

          az storage file list `
            --account-name $storageAccount `
            --account-key $storage_key `
            --share-name "$meta_model_outputs_file_share_name" 
        
