name: Deploy.sdv-tool-chain

on:
  workflow_dispatch:
      
permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    environment: sub-AVL_DevopsPilot
    #runs-on: xmew1-dop-s-stamp-d-vm-002 #TODO: Check with team and Change 
    #environment: DevOpsPilot_az #TODO: Check with team and 
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
          cache: 'pip'
          
      - name: Install dependencies
        run: |
          pip install -r ./sdv-tool-chain/platform/toolchain/requirements.txt
          pip install -r ./sdv-tool-chain/platform/toolchain/requirements_test.txt
        working-directory: ${{ github.workspace }}

      - name: Validate Metamodel
        run: python  ${{ github.workspace }}/sdv-tool-chain/platform/toolchain/src/toolchain_cli.py metamodel validate --from-file  ${{ github.workspace }}/metamodel/avl_sdv_template.yaml --override  ${{ github.workspace }}/metamodel/avl_sdv_template_overrides.yaml


      - name: Run Sdv Tool Chain for Metamodel 
        run: python  ${{ github.workspace }}/sdv-tool-chain/platform/toolchain/src/toolchain_cli.py metamodel execute --from-file  ${{ github.workspace }}/metamodel/avl_sdv_template.yaml --override  ${{ github.workspace }}/metamodel/avl_sdv_template_overrides.yaml --output-dir  ${{ github.workspace }}/output/avl_devops_pilot
        working-directory: ${{ github.workspace }}

      - name: Zip the output
        run: zip -r  ${{ github.workspace }}/output/avl_devops_pilot.zip ${{ github.workspace }}/output/avl_devops_pilot
        

      - name: Upload the output
        uses: actions/upload-artifact@v2
        with:
          name: avl_devops_pilot
          path: '${{ github.workspace }}/output/avl_devops_pilot.zip'

      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Upload Zip to file share
        shell: pwsh
        run: |
          $subscriptionID = "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
          $ResourceGroup = "xmew1-dop-s-stamp-d-rg-001"
          $storageAccount = "xmew1dopsdst"
          $fileShare = "demo-metamode-output"

          $storage_key = az storage account keys list --subscription "$subscriptionID" -g "$ResourceGroup" -n "$storageAccount" --query "[0].value" -o tsv --only-show-errors
          az storage file upload-batch --account-name $storageAccount --account-key $storage_key --destination "$fileShare" --destination-path "avl_devops_pilot" --source ${{ github.workspace }}/output/avl_devops_pilot
          az storage file list --account-name $storageAccount --account-key $storage_key --share-name "$fileShare" 
        
