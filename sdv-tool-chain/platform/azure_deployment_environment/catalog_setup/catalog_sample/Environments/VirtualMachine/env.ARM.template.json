{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "description": "This ARM template is used to deploy a VM, and it is based off https://github.com/eclipse-symphony/azure-quickstart-templates/blob/master/quickstarts/microsoft.compute/vm-new-or-existing-conditions/azuredeploy.json"
    },
    "parameters": {
        "imageReference": {
            "type": "string",
            "metadata": {
                "description": "The Azure resource path reference to the VM image. The image reference should be similar to the following: `/subscriptions/<SUBSCRIPTION_ID>/resourceGroups/<RESOURCE_GROUP_NAME>/providers/Microsoft.Compute/galleries/<GALLERY_NAME>/images/<IMAGE_NAME>`."
            }
        },
        "location": {
            "type": "string",
            "metadata": {
                "description": "The deployment location for all resources. The location must be the same location as the Azure Compute Gallery that stores the virtual image referenced in the `imageReference` field."
            }
        },
        "useExistingVNet": {
            "type": "string",
            "defaultValue": "false",
            "allowedValues": [
                "true",
                "false"
            ],
            "metadata": {
                "description": "Use an existing VNet if false. Create a new VNet if true."
            }
        },
        "virtualNetworkName": {
            "type": "string",
            "metadata": {
                "description": "The name of the virtual network the VM will be attached to. If `useExistingVNet` is set to `false`, this field should be the name of the new VNet to be created. If `useExistingVNet` is set to `true`, this field should be the name of the existing VNet."
            }
        },
        "virtualNetworkResourceGroupName": {
            "type": "string",
            "defaultValue": "[resourceGroup().name]",
            "metadata": {
                "description": "The name of the resource group where the virtual network is located. If `useExistingVNet` is set to `false`, use the defaultValue. If `useExistingVNet` is set to `true`, this field should be the name of the existing VNet's resource group."
            }
        },
        "addressPrefixes": {
            "type": "array",
            "defaultValue": [
                "10.0.0.0/16"
            ],
            "metadata": {
                "description": "The address prefixes for the virtual network. If `useExistingVNet` is set to `false`, this field should be the address prefixes of the new VNet to be created. If `useExistingVNet` is set to `true`, this field is not used."
            }
        },
        "subnetAddressPrefix": {
            "type": "string",
            "defaultValue": "10.0.0.0/24",
            "metadata": {
                "description": "The subnets for the virtual network. If `useExistingVNet` is set to `false`, this field should be the subnets of the new VNet to be created. If `useExistingVNet` is set to `true`, this field is not used."
            }
        },
        "networkSecurityGroupName": {
            "type": "string",
            "defaultValue": "defaultSecurityGroup",
            "metadata": {
                "description": "If `useExistingVNet` is set to `false`, this field should be the name of the new network security group to be created. If `useExistingVNet` is set to `true`, this field is not used."
            }
        },
        "networkSecurityGroupRules": {
            "type": "array",
            "defaultValue": [
                {
                    "name": "SSH",
                    "properties": {
                        "priority": 300,
                        "protocol": "TCP",
                        "access": "Allow",
                        "direction": "Inbound",
                        "sourceAddressPrefix": "*",
                        "sourcePortRange": "*",
                        "destinationAddressPrefix": "*",
                        "destinationPortRange": "22"
                    }
                }
            ],
            "metadata": {
                "description": "Inbound and outbound security rules for the network security group. If `useExistingVNet` is set to `true`, this field is not used."
            }
        },
        "networkInterfaceName": {
            "type": "string",
            "metadata": {
                "description": "The name of the network interface. If `useExistingVNet` is set to `false`, this field should be the name of the new network interface to be created. If `useExistingVNet` is set to `true`, this field should be the name of an existing network interface."
            }
        },
        "networkInterfaceIPConfigurationName": {
            "type": "string",
            "metadata": {
                "description": "The name of the configuration of the private IP address in the network interface. If `useExistingVNet` is set to `false`, this field should be the name of the new IP configuration to be created. If `useExistingVNet` is set to `true`, this field should be the name of an existing IP configuration."
            }
        },
        "networkInterfaceIPConfigurationSubnetName": {
            "type": "string",
            "metadata": {
                "description": "The name of the subnet to be used in the IP configuration. If `useExistingVNet` is set to `false`, this field should be the name of the new subnet to be created. If `useExistingVNet` is set to `true`, this field should be the name of an existing subnet."
            }
        },
        "virtualMachineName": {
            "type": "string",
            "metadata": {
                "description": "The name of the virtual machine."
            }
        },
        "virtualMachineZone": {
            "type": "string",
            "defaultValue": "1",
            "metadata": {
                "description": "The availability zone for the virtual machine. See https://learn.microsoft.com/en-us/azure/reliability/availability-zones-overview for more information on availability zones."
            }
        },
        "osDiskType": {
            "type": "string",
            "defaultValue": "StandardSSD_LRS",
            "metadata": {
                "description": "The disk type to use for the virtual machine. See https://learn.microsoft.com/en-us/azure/virtual-machines/disks-types for more information on Azure VM disk types."
            }
        },
        "osDiskDeleteOption": {
            "type": "string",
            "defaultValue": "Delete",
            "metadata": {
                "description": "Specifying this field with the value `Delete` will enable automatic deletion of the virtual machine's associated OS disk when the virtual machine is deleted. The only option for this field is `Delete`. Remove this field if you want to manually delete the OS disk resource when the virtual machine is deleted."
            }
        },
        "virtualMachineSize": {
            "type": "string",
            "defaultValue": "Standard_D2ps_v5",
            "metadata": {
                "description": "The size of the virtual machine. See https://learn.microsoft.com/en-us/azure/virtual-machines/sizes for more information on Azure VM sizes."
            }
        },
        "nicDeleteOption": {
            "type": "string",
            "defaultValue": "Delete",
            "metadata": {
                "description": "Specifying this field with the value `Delete` will enable automatic deletion of the virtual machine's associated network interface when the virtual machine is deleted. The only option for this field is `Delete`. Remove this field if you want to manually delete the network interface resource when the virtual machine is deleted."
            }
        }
    },
    "variables": {
        "nsgId": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]",
        "vnetID": "[resourceId(parameters('virtualNetworkResourceGroupName'), 'Microsoft.Network/virtualNetworks/subnets/', parameters('virtualNetworkName'), parameters('networkInterfaceIPConfigurationSubnetName'))]",
        "networkSecurityGroupID": {
            "id": "[variables('nsgId')]"
        }
    },
    "resources": [
        {
            "condition": "[equals(parameters('useExistingVNet'), 'false')]",
            "name": "[parameters('virtualNetworkName')]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2021-05-01",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": "[parameters('addressPrefixes')]"
                },
                "subnets": [
                    {
                        "name": "[parameters('networkInterfaceIPConfigurationSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnetAddressPrefix')]"                        }
                    }
                ]
            }
        },
        {
            "condition": "[equals(parameters('useExistingVNet'), 'false')]",
            "name": "[parameters('networkSecurityGroupName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-02-01",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": "[parameters('networkSecurityGroupRules')]"
            }
        },
        {
            "name": "[parameters('networkInterfaceName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2022-11-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', parameters('networkSecurityGroupName'))]",
                "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "[parameters('networkInterfaceIPConfigurationName')]",
                        "properties": {
                            "subnet": {
                                "id": "[variables('vnetID')]"
                            },
                            "privateIPAllocationMethod": "Dynamic"
                        }
                    }
                ],
                "networkSecurityGroup": "[if(equals(parameters('useExistingVNet'), 'false'), variables('networkSecurityGroupID'), json('null'))]"
            }
        },
        {
            "name": "[parameters('virtualMachineName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2022-03-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', parameters('networkInterfaceName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "[parameters('osDiskType')]"
                        },
                        "deleteOption": "[parameters('osDiskDeleteOption')]"
                    },
                    "imageReference": {
                        "id": "[parameters('imageReference')]"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaceName'))]",
                            "properties": {
                                "deleteOption": "[parameters('nicDeleteOption')]"
                            }
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                }
            },
            "zones": [
                "[parameters('virtualMachineZone')]"
            ]
        }
    ]
}
