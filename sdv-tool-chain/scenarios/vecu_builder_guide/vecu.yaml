# Copyright (C) Microsoft Corporation.

config:
  # The version of the vECU
  version: 0.1.0

  # The description of the vECU
  description: The vECU is a virtualized ECU that runs on a VM in Azure

  # The author of the vECU
  author: Microsoft

  software_stack:
    os:
      name: Yocto OS
      build:
        repo_owner: <GITHUB_ORG>
        repo_name: <GITHUB_REPO>
        # See scenarios/vecu_builder_guide/yocto_os/README.md for more details on how to build a Yocto OS.
        workflow_id: sdv_toolchain_yocto_os_build.yml
        # The Azure Key Vault name that contains the github PAT
        keyvault_name: <KEY_VAULT_NAME>

    middleware:
      test_file:
        src: /workspaces/sdv-toolchain/scenarios/vecu_builder_guide/include/hello_world.txt
        dst: /tmp/hello_world.txt
        type: scp
      container_image:
        src_uri: hello-world:latest
        type: docker

  symphony:
    # Home directory for Symphony files that are generated by the toolchain from this metamodel
    toolchain_output_path: /workspaces/sdv-toolchain/output
    # The Symphony Agent's IP address is the vECU's IP address.
    # The Agent's IP address will be retrieved by the vecu_download_software extension after the vECU is deployed.
    agent:
      # This is the default port used for Symphony Agent.

      # If you want to use a different port, please ensure this port number
      # matches the port specified in the 'bindings.config' and 'baseUrl' fields in the Symphony Agent's configuration file.
      # Symphony Agent's configuration file is located at
      # scenarios/common/vecu/yocto_os/meta-machine-azure/meta-azure/recipes-azure/recipes-extended/symphony-agent/files/symphony-agent.json.
      # Changing the port requires you to rebake the Yocto image.

      # The port number in this metamodel is only utilized by the vecu_download_software extension.
      # Symphony's Agent port number needs to be declared in its configuration file since the configuration
      # needs to be finalized since the symphony-agent recipe is baked into the Yocto image.
      port: 8098
    base_url: http://localhost:8082/v1alpha2

  vecu:
    # The name of the vECU
    name: vecu_toolchain_demo
    version: v1

    # The software stack to be installed on the vECU
    software_stack: config.software_stack

    domains:
      # TODO: will be implemented later
      - id: <GUID>
        name: Infotainment
        image_definition_name: aosp

      - id: <GUID>
        name: Body Control
        image_definition_name: android


  virtual_environment:
    # The Azure-specific configuration
    location: <LOCATION>
    subscription_id: <SUBSCRIPTION_ID>

    devcenter_name: <DEV_CENTER_NAME>
    devcenter_project_name: <DEV_CENTER_PROJECT_NAME>
    devcenter_catalog_name: <DEV_CENTER_CATALOG_NAME>

    compute_gallery_name: <COMPUTE_GALLERY_NAME>
    compute_gallery_resource_group: <COMPUTE_GALLERY_RESOURCE_GROUP>
    image_definition_name: <IMAGE_DEFINITION_NAME>
    image_version_number: <IMAGE_VERSION_NUMBER>

    vnet_resource_group: <VNET_RESOURCE_GROUP>
    vnet_name: <VNET_NAME>

  notification:
    # The notification configuration
    # The notification will be sent to the specified email address
    email:
      # The Azure Key Vault name that contains the email connection string
      keyvault_name: <KEY_VAULT_NAME>
      # The sender email address that is defined in your Email Communication Service -> Azure domain -> Mailfrom addresses
      sender: <SENDER_EMAIL>@<GUID>.azurecomm.net>
      recepients:
        - <FIRST>@<YOUR_DOMAIN>.com
        - <SECOND>@<YOUR_DOMAIN>.com

extensions:
  providers:
    - provider: local filesystem
      location: /workspaces/sdv-toolchain/scenarios/common/extensions/
      staging_directory: /workspaces/sdv-toolchain/scenarios/common/extensions/
    - provider: local filesystem
      location:  /workspaces/sdv-toolchain/scenarios/vecu_builder_guide/toolchain/extensions/
      staging_directory: /workspaces/sdv-toolchain/scenarios/vecu_builder_guide/toolchain/extensions/

# 'targets' (str) - The path to the targets file. *.j2 means that it is a jinja2 template. Path is relative to the model file (this file).
#    'os.environ' will be passed as 'env' to the template.
#    'config' section from above will be passed as 'config' to the template.
#
# 'targets' (dict) - The targets dictionary (as they would be in the targets file).
targets: /workspaces/sdv-toolchain/scenarios/vecu_builder_guide/include/vecu_targets.yaml.j2
